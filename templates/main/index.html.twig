{% extends 'base.html.twig' %}

{% block title %}Accueil{% endblock %}

{% block body %}
    <div>
        <div class="container">
            <div class="row mt-5 mb-3">
                <h3 class="offset-5 col-2">Accueil</h3>


                <div class="offset-2 col-3">
                    <h4>Date du jour : {{ "now"|date("d/m/Y") }}  </h4>
                    <h4>Participant: {{ app.user.pseudo }}</h4>
                    <br>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h3>Filtrer les sites</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <form class="col-auto">
                        {{ form_start(form) }}
                        {{ form_widget(form) }}
                        {{ form_end(form) }}
                    </form>




                    <form class="d-flex">
                        <strong>Entre:</strong>
                        <input id="date" class="form-control me-2 " type="date" placeholder="Date">
                        <strong>Et:</strong>
                        <input id="date" class="form-control me-2 " type="date" placeholder="Date">
                    </form>
                </div>

                <div class="col-6">
                    <form class="col-auto">

                        {{ form_start(form2, {attr: {class: 'filter js-filter-form'}}) }}

                        <div class="row">
                            <div class="col-md-6">
                                {{ form_row(form2.sortie1) }}
                            </div>
                            <div class="col-md-6">
                                {{ form_row(form2.sortie2) }}
                            </div>
                            <div class="col-md-6">
                                {{ form_row(form2.sortie3) }}
                            </div>
                            <div class="col-md-6">
                                {{ form_row(form2.sortie4) }}
                            </div>
                        </div>

                        <input type="text" class="table-filter" value="non" hidden="true" data-table4="#Table">

                        <input type="text" class="table-filter" value="Passée" hidden="true" data-table3="#Table">

                        <input type="text" class="table-filter" value="oui" hidden="true" data-table2="#Table">

                        <input type="text" class="table-filter" value="{{ app.user.pseudo }}"  hidden="true" data-table="#Table">

                        <button type="submit"  id="filtrer" onClick="fonctionFiltrer()" class="btn btn-primary mt-3 w-100">Réinitialiser filtre</button>

                        {{ form_end(form2) }}


                    </form>
                </div>
            </div>
            <div class="mt-3">
                {% for message in app.flashes('success') %}
                    <div class="alert alert-success text-center">
                        {{ message }}
                    </div>
                {% endfor %}
            </div>


            <table id="Table" class="table table-striped mt-5">
                <thead>
                <tr>
                    <th scope="col">Nom de la sortie</th>
                    <th scope="col">Date de la sortie</th>
                    <th scope="col">Clôture</th>
                    <th scope="col">inscrits/places</th>
                    <th scope="col">Etats</th>
                    <th scope="col">Inscrit</th>
                    <th scope="col">Organisateur</th>
                    <th scope="col">Actions</th>
                </tr>
                </thead>
                <tbody>
                {% for sortie in sorties %}
                    {% set ins = 'non' %}
                    <tr>
                        <td>{{ sortie.nom }}</td>
                        <td>{{ sortie.dateHeureDebut|date(" d-m-Y H:i ") }}</td>
                        {% if sortie.etat.id != 6 %}
                            <td>{{ sortie.dateFinInscription|date(" d-m-Y ") }} </td>
                            <td>{{ sortie.participants|length }}/{{ sortie.nbInscriptionMax }}</td>
                        {% else %}
                            <td class=""><strong>Motif : </strong>{{ sortie.description|length < 30?sortie.description:"Consulter la description" }} </td>
                            <td></td>
                        {% endif %}
                        <td>{{ sortie.etat.libelle }} </td>
                        {% for participant in sortie.participants %}
                            {% if participant.id == app.user.id %}
                                {% set ins = 'oui' %}
                            {% elseif participant.id ==null %}
                                {% set ins = null %}
                            {% endif %}
                        {% endfor %}
                        <td>{{ ins }}</td>
                        <td>
                            <a href="{{ path('app_profilParticipant',{id:sortie.organisateur.id}) }}">{{ sortie.organisateur.pseudo }}</a>
                        </td>

                        <td><a href="{{ path('app_sortie_afficher',{id:sortie.id}) }}">
                                <button class="btn btn-primary" type="button" name="id">Afficher</button>
                            </a>
                            {% if sortie.etat.id != 6 %}
                                {% if sortie.participants|length < sortie.nbInscriptionMax %}
                                    {% if 'now'|date(" Y-m-d ") < sortie.dateFinInscription|date(" Y-m-d ") and  ins == 'non' and app.user.id != sortie.organisateur.id %}
                                        <a href="{{ path('app_sortie_inscription',{id:sortie.id}) }}">
                                            <button class="btn btn-primary" type="button" name="id">Inscription</button>
                                        </a>
                                    {% endif %}
                                {% endif %}
                                {% if 'now'|date(" Y-m-d H:i") < sortie.dateHeureDebut|date(" Y-m-d H:i") and  ins == 'oui' and app.user.id != sortie.organisateur.id %}
                                    <a href="{{ path('app_sortie_desistement',{id:sortie.id}) }}">
                                        <button class="btn btn-primary" type="button" name="id">Se désister</button>
                                    </a>
                                {% endif %}
                                {% if 'now'|date(" Y-m-d H:i ") < sortie.dateHeureDebut|date(" Y-m-d H:i ")  and app.user.id == sortie.organisateur.id %}
                                    <a href="{{ path('app_sortie_annuler',{id:sortie.id}) }}">
                                        <button class="btn btn-primary" type="button" name="id">Annuler</button>
                                    </a>
                                {% endif %}
                                {% if 'now'|date(" Y-m-d  ") < sortie.dateFinInscription|date(" Y-m-d ")  and app.user.id == sortie.organisateur.id %}
                                    <a href="{{ path('app_sortie_modifier',{id:sortie.id}) }}">
                                        <button class="btn btn-primary" type="button" name="id">Modifier</button>
                                    </a>
                                {% endif %}
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}


                </tbody>
            </table>

            {{ knp_pagination_render(sorties) }}


            <div class="row py-5">
                <div class="col text-center">
                    <a href="{{ path('app_sortie_ajout') }}">
                        <button class="btn btn-primary">Créer une sortie</button>
                    </a>
                </div>
            </div>

        </div>
    </div>

{% endblock %}
{% block js %}

    <script>

        function fonctionRechercheTextFiltre() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("form_rechercher");
            filter = input.value.toUpperCase();
            table = document.getElementById("Table");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }




        function rechercherAvancer4(){(function rechercher() {
            "use strict";

            var TableFilter = (function () {
                var search;

                function dquery(selector) {
                    // Renvoie un tableau des éléments correspondant au sélecteur
                    return Array.prototype.slice.call(document.querySelectorAll(selector));
                }

                function onInputEvent(e) {
                    // Récupère le texte à rechercher
                    var input =  e.target;
                    search = input.value.toLocaleLowerCase();
                    // Retrouve les lignes où effectuer la recherche
                    // (l'attribut data-table de l'input sert à identifier la table à filtrer)
                    var selector = input.getAttribute("data-table4") + " tbody tr";
                    var rows = dquery(selector);
                    // Recherche le texte demandé sur les lignes du tableau
                    [].forEach.call(rows, filter);

                }

                function filter(row) {
                    // Mise en cache de la ligne en minuscule
                    if (row.lowerTextContent === undefined)
                        row.lowerTextContent = row.textContent.toLocaleLowerCase();
                    // Masque la ligne si elle ne contient pas le texte recherché
                    row.style.display = row.lowerTextContent.indexOf(search) === -1 ? "none" : "table-row";
                }

                return {
                    init: function () {
                        // Liste des champs de saisie avec un attribut data-table
                        var inputs = dquery("input[data-table4]");
                        [].forEach.call(inputs, function (input) {
                            // Déclenche la recherche dès qu'on saisi un filtre de recherche
                            input.oninput = onInputEvent;
                            // Si on a déjà une valeur (suite à navigation arrière), on relance la recherche
                            if (input.value !== "") input.oninput({ target: input });
                        });

                    }
                };

            })();

            TableFilter.init();
        })();

        }





        function rechercherAvancer3(){(function rechercher() {
            "use strict";

            var TableFilter = (function () {
                var search;

                function dquery(selector) {
                    // Renvoie un tableau des éléments correspondant au sélecteur
                    return Array.prototype.slice.call(document.querySelectorAll(selector));
                }

                function onInputEvent(e) {
                    // Récupère le texte à rechercher
                    var input =  e.target;
                    search = input.value.toLocaleLowerCase();
                    // Retrouve les lignes où effectuer la recherche
                    // (l'attribut data-table de l'input sert à identifier la table à filtrer)
                    var selector = input.getAttribute("data-table3") + " tbody tr";
                    var rows = dquery(selector);
                    // Recherche le texte demandé sur les lignes du tableau
                    [].forEach.call(rows, filter);

                }

                function filter(row) {
                    // Mise en cache de la ligne en minuscule
                    if (row.lowerTextContent === undefined)
                        row.lowerTextContent = row.textContent.toLocaleLowerCase();
                    // Masque la ligne si elle ne contient pas le texte recherché
                    row.style.display = row.lowerTextContent.indexOf(search) === -1 ? "none" : "table-row";
                }

                return {
                    init: function () {
                        // Liste des champs de saisie avec un attribut data-table
                        var inputs = dquery("input[data-table3]");
                        [].forEach.call(inputs, function (input) {
                            // Déclenche la recherche dès qu'on saisi un filtre de recherche
                            input.oninput = onInputEvent;
                            // Si on a déjà une valeur (suite à navigation arrière), on relance la recherche
                            if (input.value !== "") input.oninput({ target: input });
                        });

                    }
                };

            })();

            TableFilter.init();
        })();

        }



        function rechercherAvancer2(){(function rechercher() {
            "use strict";

            var TableFilter = (function () {
                var search;

                function dquery(selector) {
                    // Renvoie un tableau des éléments correspondant au sélecteur
                    return Array.prototype.slice.call(document.querySelectorAll(selector));
                }

                function onInputEvent(e) {
                    // Récupère le texte à rechercher
                    var input =  e.target;
                    search = input.value.toLocaleLowerCase();
                    // Retrouve les lignes où effectuer la recherche
                    // (l'attribut data-table de l'input sert à identifier la table à filtrer)
                    var selector = input.getAttribute("data-table2") + " tbody tr";
                    var rows = dquery(selector);
                    // Recherche le texte demandé sur les lignes du tableau
                    [].forEach.call(rows, filter);

                }

                function filter(row) {
                    // Mise en cache de la ligne en minuscule
                    if (row.lowerTextContent === undefined)
                        row.lowerTextContent = row.textContent.toLocaleLowerCase();
                    // Masque la ligne si elle ne contient pas le texte recherché
                    row.style.display = row.lowerTextContent.indexOf(search) === -1 ? "none" : "table-row";
                }

                return {
                    init: function () {
                        // Liste des champs de saisie avec un attribut data-table
                        var inputs = dquery("input[data-table2]");
                        [].forEach.call(inputs, function (input) {
                            // Déclenche la recherche dès qu'on saisi un filtre de recherche
                            input.oninput = onInputEvent;
                            // Si on a déjà une valeur (suite à navigation arrière), on relance la recherche
                            if (input.value !== "") input.oninput({ target: input });
                        });

                    }
                };

            })();

            TableFilter.init();
        })();

        }
        function rechercherAvancer() {
            (function rechercher() {
                "use strict";

                var TableFilter = (function () {
                    var search;

                    function dquery(selector) {
                        // Renvoie un tableau des éléments correspondant au sélecteur
                        return Array.prototype.slice.call(document.querySelectorAll(selector));
                    }

                    function onInputEvent(e) {
                        // Récupère le texte à rechercher
                        var input = e.target;
                        search = input.value.toLocaleLowerCase();
                        // Retrouve les lignes où effectuer la recherche
                        // (l'attribut data-table de l'input sert à identifier la table à filtrer)
                        var selector = input.getAttribute("data-table") + " tbody tr";
                        var rows = dquery(selector);
                        // Recherche le texte demandé sur les lignes du tableau
                        [].forEach.call(rows, filter);
                        // Mise à jour du compteur de ligne (s'il y en a un de défini)
                        // (l'attribut data-count de l'input sert à identifier l'élément où afficher le compteur)
                        var writer = input.getAttribute("data-count");
                        if (writer) {
                            // S'il existe un attribut data-count, on compte les lignes visibles
                            var count = rows.reduce(function (t, x) {
                                return t + (x.style.display === "none" ? 0 : 1);
                            }, 0);
                            // Puis on affiche le compteur
                            dquery(writer)[0].textContent = count;
                        }
                    }

                    function filter(row) {
                        // Mise en cache de la ligne en minuscule
                        if (row.lowerTextContent === undefined)
                            row.lowerTextContent = row.textContent.toLocaleLowerCase();
                        // Masque la ligne si elle ne contient pas le texte recherché
                        row.style.display = row.lowerTextContent.indexOf(search) === -1 ? "none" : "table-row";
                    }

                    return {
                        init: function () {
                            // Liste des champs de saisie avec un attribut data-table
                            var inputs = dquery("input[data-table]");
                            [].forEach.call(inputs, function (input) {
                                // Déclenche la recherche dès qu'on saisi un filtre de recherche
                                input.oninput = onInputEvent;
                                // Si on a déjà une valeur (suite à navigation arrière), on relance la recherche
                                if (input.value !== "") input.oninput({target: input});
                            });
                        }
                    };

                })();

                TableFilter.init();
            })();


        }



    </script>

{% endblock %}
